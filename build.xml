<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="pricecomparison" default="all">


    <!-- Compiler options -->
    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="128m"/>
    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/rcs/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/.sbas/**"/>
        <exclude name="**/.IJI.*/**"/>
        <exclude name="**/vssver.scc/**"/>
        <exclude name="**/vssver2.scc/**"/>
    </patternset>
    <patternset id="compiler.resources">
        <include name="**/?*.properties"/>
        <include name="**/?*.xml"/>
        <include name="**/?*.gif"/>
        <include name="**/?*.png"/>
        <include name="**/?*.jpeg"/>
        <include name="**/?*.jpg"/>
        <include name="**/?*.html"/>
        <include name="**/?*.dtd"/>
        <include name="**/?*.tld"/>
    </patternset>

    <!-- Modules -->


    <!-- Module Pricecomparison -->

    <dirname property="module.pricecomparison.basedir" file="${ant.file}"/>


    <property name="compiler.args.pricecomparison" value="${compiler.args}"/>

    <property name="pricecomparison.output.dir" value="${module.pricecomparison.basedir}/build/production"/>
    <property name="pricecomparison.testoutput.dir" value="${module.pricecomparison.basedir}/build/test"/>

    <path id="pricecomparison.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="pricecomparison.module.classpath">
        <pathelement location="${module.pricecomparison.basedir}/lib/commons-lang-2.1.jar"/>
        <pathelement location="${module.pricecomparison.basedir}/lib/jericho-html-2.6.jar"/>
        <pathelement location="${module.pricecomparison.basedir}/lib/mail.jar"/>
        <pathelement location="${module.pricecomparison.basedir}/lib/commons-collections-3.1.jar"/>
        <pathelement location="${module.pricecomparison.basedir}/lib/velocity-1.5.jar"/>
        <pathelement location="${module.pricecomparison.basedir}/lib/commons-logging-1.0.4.jar"/>
        <pathelement location="${module.pricecomparison.basedir}/lib/commons-httpclient-3.0.1.jar"/>
        <pathelement location="${module.pricecomparison.basedir}/lib/thinlet.jar"/>
        <pathelement location="${module.pricecomparison.basedir}/lib/junit-4.5.jar"/>
        <pathelement location="${module.pricecomparison.basedir}/lib/commons-codec-1.3.jar"/>
        <pathelement location="${module.pricecomparison.basedir}/lib/activation.jar"/>
    </path>

    <path id="pricecomparison.runtime.module.classpath">
        <pathelement location="${pricecomparison.output.dir}"/>
        <pathelement location="${pricecomparison.testoutput.dir}"/>
        <pathelement location="${module.pricecomparison.basedir}/lib/commons-lang-2.1.jar"/>
        <pathelement location="${module.pricecomparison.basedir}/lib/jericho-html-2.6.jar"/>
        <pathelement location="${module.pricecomparison.basedir}/lib/mail.jar"/>
        <pathelement location="${module.pricecomparison.basedir}/lib/commons-collections-3.1.jar"/>
        <pathelement location="${module.pricecomparison.basedir}/lib/velocity-1.5.jar"/>
        <pathelement location="${module.pricecomparison.basedir}/lib/commons-logging-1.0.4.jar"/>
        <pathelement location="${module.pricecomparison.basedir}/lib/commons-httpclient-3.0.1.jar"/>
        <pathelement location="${module.pricecomparison.basedir}/lib/thinlet.jar"/>
        <pathelement location="${module.pricecomparison.basedir}/lib/junit-4.5.jar"/>
        <pathelement location="${module.pricecomparison.basedir}/lib/commons-codec-1.3.jar"/>
        <pathelement location="${module.pricecomparison.basedir}/lib/activation.jar"/>
    </path>


    <patternset id="excluded.from.module.pricecomparison">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.pricecomparison">
        <patternset refid="excluded.from.module.pricecomparison"/>
    </patternset>

    <path id="pricecomparison.module.sourcepath">
        <dirset dir="${module.pricecomparison.basedir}">
            <include name="src"/>
        </dirset>
    </path>

    <path id="pricecomparison.module.test.sourcepath">
        <dirset dir="${module.pricecomparison.basedir}">
            <include name="test/src"/>
        </dirset>
    </path>


    <target name="compile.module.pricecomparison"
            depends="compile.module.pricecomparison.production,compile.module.pricecomparison.tests"
            description="Compile module Pricecomparison"/>

    <target name="compile.module.pricecomparison.production"
            description="Compile module Pricecomparison; production classes">
        <mkdir dir="${pricecomparison.output.dir}"/>
        <javac destdir="${pricecomparison.output.dir}" debug="${compiler.debug}"
               nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
            <compilerarg line="${compiler.args.pricecomparison}"/>
            <bootclasspath refid="pricecomparison.module.bootclasspath"/>
            <classpath refid="pricecomparison.module.classpath"/>
            <src refid="pricecomparison.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.pricecomparison"/>
        </javac>

        <copy todir="${pricecomparison.output.dir}">
            <fileset dir="${module.pricecomparison.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.pricecomparison.tests" depends="compile.module.pricecomparison.production"
            description="compile module Pricecomparison; test classes" unless="skip.tests">
        <mkdir dir="${pricecomparison.testoutput.dir}"/>
        <javac destdir="${pricecomparison.testoutput.dir}" debug="${compiler.debug}"
               nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
            <compilerarg line="${compiler.args.pricecomparison}"/>
            <classpath refid="pricecomparison.module.classpath"/>
            <classpath location="${pricecomparison.output.dir}"/>
            <src refid="pricecomparison.module.test.sourcepath"/>
            <patternset refid="excluded.from.compilation.pricecomparison"/>
        </javac>

        <copy todir="${pricecomparison.testoutput.dir}">
            <fileset dir="${module.pricecomparison.basedir}/test/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="clean.module.pricecomparison" description="cleanup module">
        <delete dir="${pricecomparison.output.dir}"/>
        <delete dir="${pricecomparison.testoutput.dir}"/>
        <delete dir="${module.pricecomparison.basedir}/release"/>
        <delete dir="${module.pricecomparison.basedir}/reports"/>
        <delete dir="${module.pricecomparison.basedir}/logs"/>
    </target>

    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="test" depends="compile.module.pricecomparison.tests">
        <junit printsummary="yes" fork="true" haltonfailure="yes">
            <classpath refid="pricecomparison.runtime.module.classpath"/>
            <formatter type="xml"/>
            <batchtest haltonfailure="no" todir="${pricecomparison.testoutput.dir}">
                <fileset dir="${module.pricecomparison.basedir}/test/src">
                    <include name="**/*Test*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="clean" depends="clean.module.pricecomparison" description="cleanup all"/>

    <target name="dist" depends="init, clean, compile.module.pricecomparison"/>

    <target name="all" depends="dist, test" description="build all"/>
</project>